const CACHE_NAME="ICDNCache";let cachelist=[];self.addEventListener("install",(async function(t){self.skipWaiting(),t.waitUntil(caches.open(CACHE_NAME).then((function(t){return t.addAll(cachelist)})))})),self.addEventListener("fetch",(async t=>{try{t.respondWith(handle(t.request))}catch(n){t.respondWith(handleerr(t.request,n))}}));const handleerr=async(t,n)=>new Response(`<h1>CDN分流器遇到了致命错误</h1>\n    <b>${n}</b>`,{headers:{"content-type":"text/html; charset=utf-8"}});let cdn={gh:{jsdelivr:{url:"https://cdn.jsdelivr.net/gh"},jsdelivr_fastly:{url:"https://fastly.jsdelivr.net/gh"},jsdelivr_gcore:{url:"https://gcore.jsdelivr.net/gh"},pigax_jsd:{url:"https://u.pigax.cn/gh"},pigax_chenyfan_jsd:{url:"https://cdn-jsd.pigax.cn/gh"},tianli:{url:"https://cdn1.tianli0.top/gh"},cnortles:{url:"https://cdn.cnortles.top/gh"},hin_cool:{url:"https://jsd.hin.cool/gh"}},combine:{jsdelivr:{url:"https://cdn.jsdelivr.net/combine"},jsdelivr_fastly:{url:"https://fastly.jsdelivr.net/combine"},jsdelivr_gcore:{url:"https://gcore.jsdelivr.net/combine"},pigax_jsd:{url:"https://u.pigax.cn/combine"},pigax_chenyfan_jsd:{url:"https://cdn-jsd.pigax.cn/combine"},tianli:{url:"https://cdn1.tianli0.top/combine"},cnortles:{url:"https://cdn.cnortles.top/combine"},hin_cool:{url:"https://jsd.hin.cool/combine"}},npm:{eleme:{url:"https://npm.elemecdn.com"},jsdelivr:{url:"https://cdn.jsdelivr.net/npm"},zhimg:{url:"https://unpkg.zhimg.com"},unpkg:{url:"https://unpkg.com"},bdstatic:{url:"https://code.bdstatic.com/npm"},pigax_jsd:{url:"https://u.pigax.cn/npm"},pigax_unpkg:{url:"https://unpkg.pigax.cn/"},pigax_chenyfan_jsd:{url:"https://cdn-jsd.pigax.cn/npm"},tianli:{url:"https://cdn1.tianli0.top/npm"},cnortles:{url:"https://cdn.cnortles.top/npm"},hin_cool:{url:"https://jsd.hin.cool/npm"}}};const handle=async function(t){const n=t.url,e=n.split("/")[2];let s=[];for(let r in cdn)for(let l in cdn[r])if(e==cdn[r][l].url.split("https://")[1].split("/")[0]&&n.match(cdn[r][l].url)){s=[];for(let t in cdn[r])s.push(n.replace(cdn[r][l].url,cdn[r][t].url));return n.indexOf("@latest/")>-1?lfetch(s,n):caches.match(t).then((function(e){return e||lfetch(s,n).then((function(n){return caches.open(CACHE_NAME).then((function(e){return e.put(t,n.clone()),n}))}))}))}return fetch(t)},lfetch=async(t,n)=>{let e=new AbortController;const s=async t=>new Response(await t.arrayBuffer(),{status:t.status,headers:t.headers});return Promise.any||(Promise.any=function(t){return new Promise(((n,e)=>{let s=(t=Array.isArray(t)?t:[]).length,r=[];if(0===s)return e(new AggregateError("All promises were rejected"));t.forEach((t=>{t.then((t=>{n(t)}),(t=>{s--,r.push(t),0===s&&e(new AggregateError(r))}))}))}))}),Promise.any(t.map((t=>new Promise(((n,r)=>{fetch(t,{signal:e.signal}).then(s).then((t=>{200==t.status?(e.abort(),n(t)):r(t)}))})))))};