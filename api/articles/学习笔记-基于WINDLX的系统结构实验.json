{"title":"大学课程 | 基于WINDLX的系统结构实验","slug":"学习笔记-基于WINDLX的系统结构实验","date":"2020-06-14T03:47:51.000Z","updated":"2020-06-14T03:47:51.000Z","comments":true,"path":"api/articles/学习笔记-基于WINDLX的系统结构实验.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614105647.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110049.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110236.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110251.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110327.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110345.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110407.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110622.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120000.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110830.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120002.png","https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120003.png"],"content":"<p>基于WindLX的计算机系统结构实验，随机输入n个数，求数i的概率</p>\n<p>源码：<br><a href=\"https://github.com/Justlovesmile/WindLX-Experiment\">https://github.com/Justlovesmile/WindLX-Experiment</a><br><a href=\"https://gitee.com/justlovesmile/WindLX-Experiment\">https://gitee.com/justlovesmile/WindLX-Experiment</a></p>\n<h1 id=\"《计算机系统结构》课程实验\"><a href=\"#《计算机系统结构》课程实验\" class=\"headerlink\" title=\"《计算机系统结构》课程实验\"></a>《计算机系统结构》课程实验</h1><h3 id=\"一、实验名称：\"><a href=\"#一、实验名称：\" class=\"headerlink\" title=\"一、实验名称：\"></a>一、实验名称：</h3><p>随机输入n个数，求数i的概率</p>\n<h3 id=\"二、实验原理：\"><a href=\"#二、实验原理：\" class=\"headerlink\" title=\"二、实验原理：\"></a>二、实验原理：</h3><ol>\n<li>WinDLX平台与流水线<br>WinDLX是一个基于Windows的、图形化、交互式的模拟器，能够演示DLX流水线是如何工作的，它采取伪汇编形式编码，模拟流水线的工作方式。流水线的指令执行分为5个阶段：取指、译码、执行、访存、写回。<br>WinDLX模拟器还提供了对流水线操作的统计功能，便于对流水线进行性能分析。</li>\n<li>流水线中的相关及解决办法<br>（1）结构相关：当某一条机器指令需要访问物理器件时，该器件可能正在被占用，例如连续的两条加法指令都需要用到浮点加法器，就产生结构相关，可以通过增加加法器的方式解决结构相关；<br>（2）数据相关：当某一条指令需要访问某个寄存器时，此时这个寄存器正被另一条指令所使用，从而产生数据相关，可以通过重定向技术解决数据相关；<br>（3）控制相关：当程序执行到某个循环语句时，顺序执行的下一条语句将被跳继续执行循环体的内容，从而产生控制相关，可以通过循环展开解决控制相关。</li>\n</ol>\n<h3 id=\"三、实验目的：\"><a href=\"#三、实验目的：\" class=\"headerlink\" title=\"三、实验目的：\"></a>三、实验目的：</h3><p>1、加深对流水线理论知识的理解；<br>2、掌握对流水线性能分析的方法，了解影响流水线效率的因素；<br>3、熟悉在WinDLX体系结构下的汇编代码编写和优化；<br>4、了解相关的类型及各类相关的解决办法；<br>5、培养运用所学知识解决实际问题的能力。</p>\n<h3 id=\"四、实验内容：\"><a href=\"#四、实验内容：\" class=\"headerlink\" title=\"四、实验内容：\"></a>四、实验内容：</h3><p>1、根据WinDLX模拟器伪汇编指令规则编写：随机输入n个数后，求数i的概率的程序gailv.s以及input.s<br>2、分别按照不同顺序将gailv.s和input.s装入主存，分析输入顺序不同对运行结果产生的影响；<br>3、观察程序中出现的数据、控制、结构相关，指出程序中出现上述现象的指令组合，并提出解决相关的办法；<br>4、分别考察各类解决的相关办法，分析解决相关后性能的变化。<br>注意：<br>除解决结构相关，其他情况下加、乘、除运算器都只有一个。<br>本问题中所有浮点延迟部件设置为：加法：2个延迟周期；乘法：5个延迟周期；除法：19个延迟周期。</p>\n<h3 id=\"五、实验器材（设备、元器件）：\"><a href=\"#五、实验器材（设备、元器件）：\" class=\"headerlink\" title=\"五、实验器材（设备、元器件）：\"></a>五、实验器材（设备、元器件）：</h3><p>设备：笔记本电脑一台<br>软件：VMware Workstation<br>虚拟机：Windows7 32位操作系统<br>WinDLX模拟器</p>\n<h3 id=\"六、实验步骤及操作：\"><a href=\"#六、实验步骤及操作：\" class=\"headerlink\" title=\"六、实验步骤及操作：\"></a>六、实验步骤及操作：</h3><p>1、初始化WinDLX模拟器<br>（1）为WinDLX创建目录，C:\\WinDLX。将WinDLX和gailv.s、gailv2.s、input.s放在这个目录中。<br>（2）初始化WinDLX模拟器：点击File 菜单中的 Reset all 菜单项，弹出一个“Reset DLX”对话框，点击窗口中的“确认”按钮即可。如图1所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614105647.png\"></p>\n<p>图1 初始化模拟器界面</p>\n<p>2、将程序装入WinDLX平台<br>点击File 菜单中的 Load Code or Data 菜单项，依次双击gailv.s和input.s。点击load，将两个程序装入。如图2所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110049.png\"></p>\n<p>图2 程序装入界面</p>\n<p>3、运行程序并观察</p>\n<p>进行单步调试，在WinDLX模拟器的6个子窗口观察程序的执行情况。观察程序运行的总时钟周期，产生的相关种类以及每种相关的数量。</p>\n<p>4、解决数据相关</p>\n<p>勾选Enable Forwading，采用重定向技术添加专用数据通路减少数据相关，观察数据相关的数量变化。</p>\n<p>5、解决结构相关</p>\n<p>将Addition Units的数目由1到2，观察结构相关的数量变化。</p>\n<p>6、解决控制相关</p>\n<p>将gaillv.s的循环体展开形成新文件gailv2.s，采用循环展开的方法减少控制相关，观察控制相关的数量变化。</p>\n<h3 id=\"七、实验数据及结果分析：\"><a href=\"#七、实验数据及结果分析：\" class=\"headerlink\" title=\"七、实验数据及结果分析：\"></a>七、实验数据及结果分析：</h3><p>1、程序装入顺序对运行结果的影响<br>先装入gailv.s再装入input.s时，程序能够正确执行；当先装入input.s再装入gailv.s时，因为input.s的地址高，而程序顺序执行到input.s时无法正确地输出，因此不会出现结果。</p>\n<p>2、主要代码及说明<br>(1)gailv.s主要代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data</span><br><span class=\"line\">Prompt:         .asciiz     &quot;input An integer which is array&#x27;s size value &gt;=0 : &quot;</span><br><span class=\"line\">PromptLast:    .asciiz     &quot;input an integer :&quot;</span><br><span class=\"line\">PromptNum:     .asciiz     &quot;input an integer&gt;=0 which you need:&quot;</span><br><span class=\"line\">PrintfFormat:   .asciiz     &quot;Probability: %g &quot;</span><br><span class=\"line\">PromptError:   .asciiz     &quot;Error!Need int&gt;=0!Input:(Go:1,other to End)&quot;</span><br><span class=\"line\">.align   2</span><br><span class=\"line\">PrintfPar:      .word        PrintfFormat</span><br><span class=\"line\">Printf:        .space       8</span><br><span class=\"line\">PrintfValue:    .space       1024</span><br><span class=\"line\">.text</span><br><span class=\"line\">.global main</span><br><span class=\"line\">main:</span><br><span class=\"line\">                ;*** 输入数组大小和相关初始化</span><br><span class=\"line\">                addi            r1,r0,Prompt     ;将Prompt字符串首地址放入r1寄存器中</span><br><span class=\"line\">                jal         InputUnsigned    ;跳转子函数，输入数组大小n</span><br><span class=\"line\">                bnez           r10,Error        ;输入异常处理</span><br><span class=\"line\">                beqz           r1,InputNum      ;如果r1为0，跳转InputNum</span><br><span class=\"line\">                add            r2,r0,r1         ;将数组大小n存于r2</span><br><span class=\"line\">                add            r6,r0,r1         ;将数组大小n存于r6</span><br><span class=\"line\">                addi           r3,r0,0          ;初始化r3</span><br><span class=\"line\">                addi           r7,r0,1          ;r7等于1</span><br><span class=\"line\">                movi2fp        f1,r7            ;f1等于1</span><br><span class=\"line\">                addf           f2,f2,f0         ;初始化f2,f3,f4</span><br><span class=\"line\">                addf           f3,f3,f0</span><br><span class=\"line\">                addf           f4,f4,f0</span><br><span class=\"line\">                movi2fp        f5,r1            ;将数组大小n存于f5</span><br><span class=\"line\"></span><br><span class=\"line\">InputArray:</span><br><span class=\"line\">                ;*** 输入数组</span><br><span class=\"line\">                beqz           r2, ProcessPart      ;如果r2等于0则跳转ProcessPart </span><br><span class=\"line\">                addi           r1,r0,PromptLast     ;输入数字</span><br><span class=\"line\">                jal            InputUnsigned</span><br><span class=\"line\">                bnez           r10,Error</span><br><span class=\"line\">                sw             PrintfValue(r3),r1   ;将r1寄存器中的数放入r3寄存区中所存数地址的存储器中</span><br><span class=\"line\">                addi           r3,r3,4              ;r3后移</span><br><span class=\"line\">                subi           r2,r2,1              ;r2减1</span><br><span class=\"line\">                j              InputArray           ;循环输入</span><br><span class=\"line\"></span><br><span class=\"line\">ProcessPart:</span><br><span class=\"line\">                addi           r3,r0,0              ;初始化r3</span><br><span class=\"line\"></span><br><span class=\"line\">InputNum:</span><br><span class=\"line\">                ;*** 输入求概率的数字 </span><br><span class=\"line\">                addi           r1,r0,PromptNum</span><br><span class=\"line\">                jal            InputUnsigned</span><br><span class=\"line\">                 bnez           r10,Error</span><br><span class=\"line\">                add            r2,r0,r1             ;保存i到r2</span><br><span class=\"line\">                movi2fp        f2,r2                ;保存i到f2</span><br><span class=\"line\"></span><br><span class=\"line\">Loop:</span><br><span class=\"line\">                ;*** 循环与计数       </span><br><span class=\"line\">                beqz           r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">                subi           r6,r6,1            ;r6减1</span><br><span class=\"line\">                lf             f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">                addi           r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i        r7,f2                </span><br><span class=\"line\">                movfp2i        r8,f3</span><br><span class=\"line\">                seq            r12,r7,r8          ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">                bnez           r12,Sum            ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">                j              Loop               ;循环</span><br><span class=\"line\"></span><br><span class=\"line\">Sum:</span><br><span class=\"line\">                addf           f4,f4,f1           ;计数</span><br><span class=\"line\">                j              Loop</span><br><span class=\"line\"></span><br><span class=\"line\">Output:</span><br><span class=\"line\">                cvti2d         f0,f4              ;单精度转换为双精度</span><br><span class=\"line\">                cvti2d         f6,f5</span><br><span class=\"line\">                movfp2i        r5,f5</span><br><span class=\"line\">                beqz           r5,OutputInner     ;分母为0</span><br><span class=\"line\">                divd           f6,f0,f6           ;f6=f0/f6</span><br><span class=\"line\"></span><br><span class=\"line\">OutputInner:</span><br><span class=\"line\">                sd              Printf,f6</span><br><span class=\"line\">                addi            r14,r0,PrintfPar     </span><br><span class=\"line\">                trap            5                    ;标准输出</span><br><span class=\"line\">                trap            0                    ;程序结束</span><br><span class=\"line\"></span><br><span class=\"line\">Error:</span><br><span class=\"line\">                addi            r1,r0,PromptError</span><br><span class=\"line\">                jal             InputUnsigned</span><br><span class=\"line\">                bnez            r1,main</span><br><span class=\"line\">                    trap                0</span><br></pre></td></tr></table></figure>\n\n<p>（2）input.s主要代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** reads digits to end of line</span><br><span class=\"line\">        lbu         r3,0(r2)</span><br><span class=\"line\">        seqi        r5,r3,10    ;LF -&gt; Exit</span><br><span class=\"line\">        bnez        r5,Finish</span><br><span class=\"line\">        slti        r11,r3,58;***判断是否为非法字符</span><br><span class=\"line\">        beqz        r11,Error</span><br><span class=\"line\">        slti        r10,r3,48   </span><br><span class=\"line\">        bnez        r10,Error</span><br><span class=\"line\">        subi        r3,r3,48    ;转换ASCAII码</span><br><span class=\"line\">        multu       r1,r1,r4    ;转换十进制</span><br><span class=\"line\">        add         r1,r1,r3</span><br><span class=\"line\">        addi        r2,r2,1     ;指针后移</span><br><span class=\"line\">        j           Loop</span><br></pre></td></tr></table></figure>\n\n<p>3、程序分析及运行结果</p>\n<p>（1）根据提示输入一个正整数n代表接下来输入的数的总个数。<br>测试用例：n=5。</p>\n<p>（2）再根据提示输入n个数字。<br>测试用例：1，2，3，3，4</p>\n<p>（3）输入想要求概率的数i。<br>测试用例：3</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110236.png\"></p>\n<p>图3 运行结果截图</p>\n<p>由图3可知运行结果为0.4，计算结果正确。</p>\n<p>（4）异常处理：输入任何不是自然数的字符，如：负数，小数，以及其他非法字符均会提示错误。异常处理结果如图4所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110251.png\"></p>\n<p>图4 异常处理结果截图</p>\n<p>（5）点击Statistics窗口，查看程序执行的时钟周期以及数据相关、结构相关、控制相关的发生次数。<br>程序执行共用621个时钟周期，数据相关发生172次，结构相关发生2次，控制相关发生42次，如图5所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110327.png\"></p>\n<p>图5 时钟周期和相关数据截图</p>\n<p>4、数据相关及解决</p>\n<p>（1）数据相关产生的原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movfp2i              r8,f3</span><br><span class=\"line\">seq                  r12,r7,r8       ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">bnez                 r12,Sum         ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br></pre></td></tr></table></figure>\n\n<p>seq指令要使用r8寄存器的数据，但是上一条指令movfp2i刚刚执行完数据还没有更新，产生数据相关，并且之后的bnez指令也需要上一条seq指令的中还没更新的寄存器r12，产生数据相关，如图6所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110345.png\"> </p>\n<p>图6 数据相关截图</p>\n<p>（2）数据相关的解决</p>\n<p>采用重定向技术，勾选Configuration的Enable Forwading选项。在第一条指令结束后直接将寄存器r8的内容更新，在第二条指令结束后直接将寄存器r12数据更新，以此来消除数据相关，如图7所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110407.png\"></p>\n<p>图7 解决数据相关截图</p>\n<p>查看运行结果，数据相关数量降低了64，处理后的数据相关个数为108，如图8所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110622.png\"></p>\n<p>图8 解决数据相关的数据截图</p>\n<p>5、控制相关及解决</p>\n<p>（1）控制相关的产生原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** 循环与计数       </span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4          ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8        ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum   ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            j             Loop      ;循环</span><br></pre></td></tr></table></figure>\n\n<p>在这段程序中，循环体的出现造成了控制相关。</p>\n<p>（2）控制相关的解决</p>\n<p>采用循环展开的方式将循环体的内容复制一次。可以降低控制相关的个数。如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** 循环与计数      </span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8    ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum      ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8    ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum      ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            j             Loop         ;循环</span><br></pre></td></tr></table></figure>\n\n<p>重新运行后控制相关数量减少为40，如图9所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120000.png\"></p>\n<p>图9 解决控制相关的数据截图</p>\n<p>6、结构相关及解决</p>\n<p>（1）结构相关产生的原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addf          f2,f2,f0         ;初始化f2,f3,f4</span><br><span class=\"line\">addf          f3,f3,f0</span><br><span class=\"line\">addf          f4,f4,f0</span><br></pre></td></tr></table></figure>\n\n<p>在这段语句运行时需要连续进行加操作，由于加法器只有一个，产生结构相关。</p>\n<p>（2）结构相关的解决</p>\n<p>添加加法器Addition Units的个数，如图10所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110830.png\"></p>\n<p>图10 增加加法器Addition Units界面的截图</p>\n<p>再次运行程序可以发现结构相关数量降低，降低到0个，如图11所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120002.png\"></p>\n<p>图11 解决结构相关的数据截图</p>\n<p>7、程序流程图</p>\n<p>如图12所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120003.png\"></p>\n<p>图12 程序流程图</p>\n<h3 id=\"八、实验结论：\"><a href=\"#八、实验结论：\" class=\"headerlink\" title=\"八、实验结论：\"></a>八、实验结论：</h3><ol>\n<li>通过采用重定向技术减少了数据相关；</li>\n<li>通过循环展开的方式将循环体的内容展开来减少控制相关；</li>\n<li>通过增加硬件的数目来减少结构相关；</li>\n<li>执行程序的顺序会影响程序执行是否正确，必须先执行源程序gailv.s，再执行input.s；修改后的程序必须清空之前所有的操作（reset all）之后再重新运行。</li>\n</ol>\n","more":"<p>基于WindLX的计算机系统结构实验，随机输入n个数，求数i的概率</p>\n<p>源码：<br><a href=\"https://github.com/Justlovesmile/WindLX-Experiment\">https://github.com/Justlovesmile/WindLX-Experiment</a><br><a href=\"https://gitee.com/justlovesmile/WindLX-Experiment\">https://gitee.com/justlovesmile/WindLX-Experiment</a></p>\n<h1 id=\"《计算机系统结构》课程实验\"><a href=\"#《计算机系统结构》课程实验\" class=\"headerlink\" title=\"《计算机系统结构》课程实验\"></a>《计算机系统结构》课程实验</h1><h3 id=\"一、实验名称：\"><a href=\"#一、实验名称：\" class=\"headerlink\" title=\"一、实验名称：\"></a>一、实验名称：</h3><p>随机输入n个数，求数i的概率</p>\n<h3 id=\"二、实验原理：\"><a href=\"#二、实验原理：\" class=\"headerlink\" title=\"二、实验原理：\"></a>二、实验原理：</h3><ol>\n<li>WinDLX平台与流水线<br>WinDLX是一个基于Windows的、图形化、交互式的模拟器，能够演示DLX流水线是如何工作的，它采取伪汇编形式编码，模拟流水线的工作方式。流水线的指令执行分为5个阶段：取指、译码、执行、访存、写回。<br>WinDLX模拟器还提供了对流水线操作的统计功能，便于对流水线进行性能分析。</li>\n<li>流水线中的相关及解决办法<br>（1）结构相关：当某一条机器指令需要访问物理器件时，该器件可能正在被占用，例如连续的两条加法指令都需要用到浮点加法器，就产生结构相关，可以通过增加加法器的方式解决结构相关；<br>（2）数据相关：当某一条指令需要访问某个寄存器时，此时这个寄存器正被另一条指令所使用，从而产生数据相关，可以通过重定向技术解决数据相关；<br>（3）控制相关：当程序执行到某个循环语句时，顺序执行的下一条语句将被跳继续执行循环体的内容，从而产生控制相关，可以通过循环展开解决控制相关。</li>\n</ol>\n<h3 id=\"三、实验目的：\"><a href=\"#三、实验目的：\" class=\"headerlink\" title=\"三、实验目的：\"></a>三、实验目的：</h3><p>1、加深对流水线理论知识的理解；<br>2、掌握对流水线性能分析的方法，了解影响流水线效率的因素；<br>3、熟悉在WinDLX体系结构下的汇编代码编写和优化；<br>4、了解相关的类型及各类相关的解决办法；<br>5、培养运用所学知识解决实际问题的能力。</p>\n<h3 id=\"四、实验内容：\"><a href=\"#四、实验内容：\" class=\"headerlink\" title=\"四、实验内容：\"></a>四、实验内容：</h3><p>1、根据WinDLX模拟器伪汇编指令规则编写：随机输入n个数后，求数i的概率的程序gailv.s以及input.s<br>2、分别按照不同顺序将gailv.s和input.s装入主存，分析输入顺序不同对运行结果产生的影响；<br>3、观察程序中出现的数据、控制、结构相关，指出程序中出现上述现象的指令组合，并提出解决相关的办法；<br>4、分别考察各类解决的相关办法，分析解决相关后性能的变化。<br>注意：<br>除解决结构相关，其他情况下加、乘、除运算器都只有一个。<br>本问题中所有浮点延迟部件设置为：加法：2个延迟周期；乘法：5个延迟周期；除法：19个延迟周期。</p>\n<h3 id=\"五、实验器材（设备、元器件）：\"><a href=\"#五、实验器材（设备、元器件）：\" class=\"headerlink\" title=\"五、实验器材（设备、元器件）：\"></a>五、实验器材（设备、元器件）：</h3><p>设备：笔记本电脑一台<br>软件：VMware Workstation<br>虚拟机：Windows7 32位操作系统<br>WinDLX模拟器</p>\n<h3 id=\"六、实验步骤及操作：\"><a href=\"#六、实验步骤及操作：\" class=\"headerlink\" title=\"六、实验步骤及操作：\"></a>六、实验步骤及操作：</h3><p>1、初始化WinDLX模拟器<br>（1）为WinDLX创建目录，C:\\WinDLX。将WinDLX和gailv.s、gailv2.s、input.s放在这个目录中。<br>（2）初始化WinDLX模拟器：点击File 菜单中的 Reset all 菜单项，弹出一个“Reset DLX”对话框，点击窗口中的“确认”按钮即可。如图1所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614105647.png\"></p>\n<p>图1 初始化模拟器界面</p>\n<p>2、将程序装入WinDLX平台<br>点击File 菜单中的 Load Code or Data 菜单项，依次双击gailv.s和input.s。点击load，将两个程序装入。如图2所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110049.png\"></p>\n<p>图2 程序装入界面</p>\n<p>3、运行程序并观察</p>\n<p>进行单步调试，在WinDLX模拟器的6个子窗口观察程序的执行情况。观察程序运行的总时钟周期，产生的相关种类以及每种相关的数量。</p>\n<p>4、解决数据相关</p>\n<p>勾选Enable Forwading，采用重定向技术添加专用数据通路减少数据相关，观察数据相关的数量变化。</p>\n<p>5、解决结构相关</p>\n<p>将Addition Units的数目由1到2，观察结构相关的数量变化。</p>\n<p>6、解决控制相关</p>\n<p>将gaillv.s的循环体展开形成新文件gailv2.s，采用循环展开的方法减少控制相关，观察控制相关的数量变化。</p>\n<h3 id=\"七、实验数据及结果分析：\"><a href=\"#七、实验数据及结果分析：\" class=\"headerlink\" title=\"七、实验数据及结果分析：\"></a>七、实验数据及结果分析：</h3><p>1、程序装入顺序对运行结果的影响<br>先装入gailv.s再装入input.s时，程序能够正确执行；当先装入input.s再装入gailv.s时，因为input.s的地址高，而程序顺序执行到input.s时无法正确地输出，因此不会出现结果。</p>\n<p>2、主要代码及说明<br>(1)gailv.s主要代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data</span><br><span class=\"line\">Prompt:         .asciiz     &quot;input An integer which is array&#x27;s size value &gt;=0 : &quot;</span><br><span class=\"line\">PromptLast:    .asciiz     &quot;input an integer :&quot;</span><br><span class=\"line\">PromptNum:     .asciiz     &quot;input an integer&gt;=0 which you need:&quot;</span><br><span class=\"line\">PrintfFormat:   .asciiz     &quot;Probability: %g &quot;</span><br><span class=\"line\">PromptError:   .asciiz     &quot;Error!Need int&gt;=0!Input:(Go:1,other to End)&quot;</span><br><span class=\"line\">.align   2</span><br><span class=\"line\">PrintfPar:      .word        PrintfFormat</span><br><span class=\"line\">Printf:        .space       8</span><br><span class=\"line\">PrintfValue:    .space       1024</span><br><span class=\"line\">.text</span><br><span class=\"line\">.global main</span><br><span class=\"line\">main:</span><br><span class=\"line\">                ;*** 输入数组大小和相关初始化</span><br><span class=\"line\">                addi            r1,r0,Prompt     ;将Prompt字符串首地址放入r1寄存器中</span><br><span class=\"line\">                jal         InputUnsigned    ;跳转子函数，输入数组大小n</span><br><span class=\"line\">                bnez           r10,Error        ;输入异常处理</span><br><span class=\"line\">                beqz           r1,InputNum      ;如果r1为0，跳转InputNum</span><br><span class=\"line\">                add            r2,r0,r1         ;将数组大小n存于r2</span><br><span class=\"line\">                add            r6,r0,r1         ;将数组大小n存于r6</span><br><span class=\"line\">                addi           r3,r0,0          ;初始化r3</span><br><span class=\"line\">                addi           r7,r0,1          ;r7等于1</span><br><span class=\"line\">                movi2fp        f1,r7            ;f1等于1</span><br><span class=\"line\">                addf           f2,f2,f0         ;初始化f2,f3,f4</span><br><span class=\"line\">                addf           f3,f3,f0</span><br><span class=\"line\">                addf           f4,f4,f0</span><br><span class=\"line\">                movi2fp        f5,r1            ;将数组大小n存于f5</span><br><span class=\"line\"></span><br><span class=\"line\">InputArray:</span><br><span class=\"line\">                ;*** 输入数组</span><br><span class=\"line\">                beqz           r2, ProcessPart      ;如果r2等于0则跳转ProcessPart </span><br><span class=\"line\">                addi           r1,r0,PromptLast     ;输入数字</span><br><span class=\"line\">                jal            InputUnsigned</span><br><span class=\"line\">                bnez           r10,Error</span><br><span class=\"line\">                sw             PrintfValue(r3),r1   ;将r1寄存器中的数放入r3寄存区中所存数地址的存储器中</span><br><span class=\"line\">                addi           r3,r3,4              ;r3后移</span><br><span class=\"line\">                subi           r2,r2,1              ;r2减1</span><br><span class=\"line\">                j              InputArray           ;循环输入</span><br><span class=\"line\"></span><br><span class=\"line\">ProcessPart:</span><br><span class=\"line\">                addi           r3,r0,0              ;初始化r3</span><br><span class=\"line\"></span><br><span class=\"line\">InputNum:</span><br><span class=\"line\">                ;*** 输入求概率的数字 </span><br><span class=\"line\">                addi           r1,r0,PromptNum</span><br><span class=\"line\">                jal            InputUnsigned</span><br><span class=\"line\">                 bnez           r10,Error</span><br><span class=\"line\">                add            r2,r0,r1             ;保存i到r2</span><br><span class=\"line\">                movi2fp        f2,r2                ;保存i到f2</span><br><span class=\"line\"></span><br><span class=\"line\">Loop:</span><br><span class=\"line\">                ;*** 循环与计数       </span><br><span class=\"line\">                beqz           r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">                subi           r6,r6,1            ;r6减1</span><br><span class=\"line\">                lf             f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">                addi           r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i        r7,f2                </span><br><span class=\"line\">                movfp2i        r8,f3</span><br><span class=\"line\">                seq            r12,r7,r8          ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">                bnez           r12,Sum            ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">                j              Loop               ;循环</span><br><span class=\"line\"></span><br><span class=\"line\">Sum:</span><br><span class=\"line\">                addf           f4,f4,f1           ;计数</span><br><span class=\"line\">                j              Loop</span><br><span class=\"line\"></span><br><span class=\"line\">Output:</span><br><span class=\"line\">                cvti2d         f0,f4              ;单精度转换为双精度</span><br><span class=\"line\">                cvti2d         f6,f5</span><br><span class=\"line\">                movfp2i        r5,f5</span><br><span class=\"line\">                beqz           r5,OutputInner     ;分母为0</span><br><span class=\"line\">                divd           f6,f0,f6           ;f6=f0/f6</span><br><span class=\"line\"></span><br><span class=\"line\">OutputInner:</span><br><span class=\"line\">                sd              Printf,f6</span><br><span class=\"line\">                addi            r14,r0,PrintfPar     </span><br><span class=\"line\">                trap            5                    ;标准输出</span><br><span class=\"line\">                trap            0                    ;程序结束</span><br><span class=\"line\"></span><br><span class=\"line\">Error:</span><br><span class=\"line\">                addi            r1,r0,PromptError</span><br><span class=\"line\">                jal             InputUnsigned</span><br><span class=\"line\">                bnez            r1,main</span><br><span class=\"line\">                    trap                0</span><br></pre></td></tr></table></figure>\n\n<p>（2）input.s主要代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** reads digits to end of line</span><br><span class=\"line\">        lbu         r3,0(r2)</span><br><span class=\"line\">        seqi        r5,r3,10    ;LF -&gt; Exit</span><br><span class=\"line\">        bnez        r5,Finish</span><br><span class=\"line\">        slti        r11,r3,58;***判断是否为非法字符</span><br><span class=\"line\">        beqz        r11,Error</span><br><span class=\"line\">        slti        r10,r3,48   </span><br><span class=\"line\">        bnez        r10,Error</span><br><span class=\"line\">        subi        r3,r3,48    ;转换ASCAII码</span><br><span class=\"line\">        multu       r1,r1,r4    ;转换十进制</span><br><span class=\"line\">        add         r1,r1,r3</span><br><span class=\"line\">        addi        r2,r2,1     ;指针后移</span><br><span class=\"line\">        j           Loop</span><br></pre></td></tr></table></figure>\n\n<p>3、程序分析及运行结果</p>\n<p>（1）根据提示输入一个正整数n代表接下来输入的数的总个数。<br>测试用例：n=5。</p>\n<p>（2）再根据提示输入n个数字。<br>测试用例：1，2，3，3，4</p>\n<p>（3）输入想要求概率的数i。<br>测试用例：3</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110236.png\"></p>\n<p>图3 运行结果截图</p>\n<p>由图3可知运行结果为0.4，计算结果正确。</p>\n<p>（4）异常处理：输入任何不是自然数的字符，如：负数，小数，以及其他非法字符均会提示错误。异常处理结果如图4所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110251.png\"></p>\n<p>图4 异常处理结果截图</p>\n<p>（5）点击Statistics窗口，查看程序执行的时钟周期以及数据相关、结构相关、控制相关的发生次数。<br>程序执行共用621个时钟周期，数据相关发生172次，结构相关发生2次，控制相关发生42次，如图5所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110327.png\"></p>\n<p>图5 时钟周期和相关数据截图</p>\n<p>4、数据相关及解决</p>\n<p>（1）数据相关产生的原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movfp2i              r8,f3</span><br><span class=\"line\">seq                  r12,r7,r8       ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">bnez                 r12,Sum         ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br></pre></td></tr></table></figure>\n\n<p>seq指令要使用r8寄存器的数据，但是上一条指令movfp2i刚刚执行完数据还没有更新，产生数据相关，并且之后的bnez指令也需要上一条seq指令的中还没更新的寄存器r12，产生数据相关，如图6所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110345.png\"> </p>\n<p>图6 数据相关截图</p>\n<p>（2）数据相关的解决</p>\n<p>采用重定向技术，勾选Configuration的Enable Forwading选项。在第一条指令结束后直接将寄存器r8的内容更新，在第二条指令结束后直接将寄存器r12数据更新，以此来消除数据相关，如图7所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110407.png\"></p>\n<p>图7 解决数据相关截图</p>\n<p>查看运行结果，数据相关数量降低了64，处理后的数据相关个数为108，如图8所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110622.png\"></p>\n<p>图8 解决数据相关的数据截图</p>\n<p>5、控制相关及解决</p>\n<p>（1）控制相关的产生原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** 循环与计数       </span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4          ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8        ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum   ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            j             Loop      ;循环</span><br></pre></td></tr></table></figure>\n\n<p>在这段程序中，循环体的出现造成了控制相关。</p>\n<p>（2）控制相关的解决</p>\n<p>采用循环展开的方式将循环体的内容复制一次。可以降低控制相关的个数。如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loop:       ;*** 循环与计数      </span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8    ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum      ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            beqz          r6,Output          ;如果r6等于0则结束Loop跳转Output</span><br><span class=\"line\">            subi          r6,r6,1            ;r6减1</span><br><span class=\"line\">            lf            f3,PrintfValue(r3) ;取出r3地址中的数到f3</span><br><span class=\"line\">            addi          r3,r3,4            ;r3后移</span><br><span class=\"line\">                movfp2i       r7,f2                </span><br><span class=\"line\">            movfp2i       r8,f3</span><br><span class=\"line\">            seq           r12,r7,r8    ;如果r7等于r8,r12为1，否则为0 </span><br><span class=\"line\">            bnez          r12,Sum      ;r12为不等于0,则跳转到Sum计数，否则继续循环</span><br><span class=\"line\">            j             Loop         ;循环</span><br></pre></td></tr></table></figure>\n\n<p>重新运行后控制相关数量减少为40，如图9所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120000.png\"></p>\n<p>图9 解决控制相关的数据截图</p>\n<p>6、结构相关及解决</p>\n<p>（1）结构相关产生的原因</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addf          f2,f2,f0         ;初始化f2,f3,f4</span><br><span class=\"line\">addf          f3,f3,f0</span><br><span class=\"line\">addf          f4,f4,f0</span><br></pre></td></tr></table></figure>\n\n<p>在这段语句运行时需要连续进行加操作，由于加法器只有一个，产生结构相关。</p>\n<p>（2）结构相关的解决</p>\n<p>添加加法器Addition Units的个数，如图10所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614110830.png\"></p>\n<p>图10 增加加法器Addition Units界面的截图</p>\n<p>再次运行程序可以发现结构相关数量降低，降低到0个，如图11所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120002.png\"></p>\n<p>图11 解决结构相关的数据截图</p>\n<p>7、程序流程图</p>\n<p>如图12所示。</p>\n<p> <img src=\"https://cdn.jsdelivr.net/gh/Justlovesmile/CDN2/post/20200614120003.png\"></p>\n<p>图12 程序流程图</p>\n<h3 id=\"八、实验结论：\"><a href=\"#八、实验结论：\" class=\"headerlink\" title=\"八、实验结论：\"></a>八、实验结论：</h3><ol>\n<li>通过采用重定向技术减少了数据相关；</li>\n<li>通过循环展开的方式将循环体的内容展开来减少控制相关；</li>\n<li>通过增加硬件的数目来减少结构相关；</li>\n<li>执行程序的顺序会影响程序执行是否正确，必须先执行源程序gailv.s，再执行input.s；修改后的程序必须清空之前所有的操作（reset all）之后再重新运行。</li>\n</ol>\n","categories":[{"name":"学习笔记","path":"api/categories/学习笔记.json"}],"tags":[{"name":"大学课程","path":"api/tags/大学课程.json"},{"name":"系统结构","path":"api/tags/系统结构.json"},{"name":"汇编","path":"api/tags/汇编.json"}]}