{"title":"学习笔记 | 什么是Node.js","slug":"学习笔记-Node-js","date":"2019-10-03T02:16:57.000Z","updated":"2019-10-03T02:16:57.000Z","comments":true,"path":"api/articles/学习笔记-Node-js.json","excerpt":"开始去了解node.js","covers":null,"content":"<p>开始去了解node.js</p>\n<span id=\"more\"></span>\n<h1 id=\"Node-js简介\"><a href=\"#Node-js简介\" class=\"headerlink\" title=\"Node.js简介\"></a>Node.js简介</h1><ul>\n<li>Node.js是运行在服务端的JavaScript，是一个事件驱动I/O服务端Javascript环境。</li>\n<li>查看版本：<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br></pre></td></tr></table></figure></li>\n<li>node版本管理工具nvm</li>\n</ul>\n<h1 id=\"Node-js应用\"><a href=\"#Node-js应用\" class=\"headerlink\" title=\"Node.js应用\"></a>Node.js应用</h1><ul>\n<li>Node.js应用的构成：<ul>\n<li>引入required模块</li>\n<li>创建服务器</li>\n<li>接收请求与响应请求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"创建Node-js应用\"><a href=\"#创建Node-js应用\" class=\"headerlink\" title=\"创建Node.js应用\"></a>创建Node.js应用</h2><ul>\n<li>步骤一：引入required模块<ul>\n<li>使用require指令来载入http模块，并将实例化的HTTP复制给变量http，实例如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;http&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>步骤二：创建服务器</li>\n</ul>\n<ol>\n<li>创建一个server.js的文件:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;http&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//发送http头部</span></span><br><span class=\"line\">    <span class=\"comment\">//HTTP状态值：200 ：OK</span></span><br><span class=\"line\">    <span class=\"comment\">//内容类型：text/plain</span></span><br><span class=\"line\">    response.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>:<span class=\"string\">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class=\"line\">    <span class=\"comment\">//发送响应数据 “Hello World”</span></span><br><span class=\"line\">    response.end(<span class=\"string\">&#x27;Hello World\\n&#x27;</span>);</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//终端打印如下信息</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Server running at http://127.0.0.1:8888/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>使用node命令执行以上代码</li>\n</ol>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">server</span>.js</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>访问<a href=\"http://127.0.0.1:8888/\">http://127.0.0.1:8888/</a></li>\n</ol>\n<h2 id=\"npm使用介绍\"><a href=\"#npm使用介绍\" class=\"headerlink\" title=\"npm使用介绍\"></a>npm使用介绍</h2><ul>\n<li>查看npm版本</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> -v</span><br></pre></td></tr></table></figure>\n<ul>\n<li>升级版本</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> install <span class=\"built_in\">npm</span> -g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装包</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> &lt;Module Name&gt;          <span class=\"comment\"># 本地安装</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span> &lt;Module Name&gt; -g       <span class=\"comment\"># 全局安装</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看安装信息</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> list -g                        <span class=\"comment\"># 查看全局安装的模块</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> list &lt;Module Name&gt;             <span class=\"comment\"># 查看某个模块的版本号</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ls                             <span class=\"comment\"># 查看当前目录下的包信息</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>卸载模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>搜索模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm search &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建模块</li>\n</ul>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$npm init                            <span class=\"meta\"># 会自动生成package.json</span></span><br><span class=\"line\"></span><br><span class=\"line\">$npm adduser                         <span class=\"meta\"># 在npm资源库中注册用户</span></span><br><span class=\"line\">Username:XXXX</span><br><span class=\"line\">Password:XXXXXXX</span><br><span class=\"line\">Email: XXXXXXXXX<span class=\"symbol\">@XXX</span>.XXX</span><br><span class=\"line\"></span><br><span class=\"line\">$npm publish                         <span class=\"meta\"># 发布模块</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Node-js-REPL-交互式解释器\"><a href=\"#Node-js-REPL-交互式解释器\" class=\"headerlink\" title=\"Node.js REPL(交互式解释器)\"></a>Node.js REPL(交互式解释器)</h2><ul>\n<li>REPL(Read Eval Print Loop:交互式解释器)，Node自带交互式解释器，可以执行<code>读取</code>,<code>执行</code>,<code>打印</code>,<code>循环</code>等任务</li>\n<li>在Node的REPL中可以执行：</li>\n</ul>\n<ol>\n<li>简单的表达式运算</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">1</span>+<span class=\"number\">4</span></span></span><br><span class=\"line\">5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">5</span>/<span class=\"number\">2</span></span></span><br><span class=\"line\">2.5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"> </span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>使用变量</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">1</span>+<span class=\"number\">4</span></span></span><br><span class=\"line\">5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">5</span>/<span class=\"number\">2</span></span></span><br><span class=\"line\">2.5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x=<span class=\"number\">10</span></span></span><br><span class=\"line\">10</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> y=<span class=\"number\">10</span></span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x+y</span></span><br><span class=\"line\">20</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;Hello World!&quot;</span>)</span></span><br><span class=\"line\">Hello World!</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"> </span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>多行表达式</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">do</span> &#123;</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\">x++;</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;x:&quot;</span>+x);</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\">&#125;<span class=\"keyword\">while</span>(x&lt;<span class=\"number\">5</span>);</span></span><br><span class=\"line\">x:1</span><br><span class=\"line\">x:2</span><br><span class=\"line\">x:3</span><br><span class=\"line\">x:4</span><br><span class=\"line\">x:5</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">      </span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>下划线变量<code>[使用下划线(_)获取上一个表达式的运算结果]</code></li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> x=<span class=\"number\">10</span>;</span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">y=<span class=\"number\">10</span>;</span></span><br><span class=\"line\">10</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x+y</span></span><br><span class=\"line\">20</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> sum=_</span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(sum)</span></span><br><span class=\"line\">20</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>两次ctrl+c停止REPL</li>\n</ol>\n<h2 id=\"Node-js的回调函数\"><a href=\"#Node-js的回调函数\" class=\"headerlink\" title=\"Node.js的回调函数\"></a>Node.js的回调函数</h2><ul>\n<li>Node.js异步编程的直接体现就是回调</li>\n<li>阻塞代码实例</li>\n<li>创建一个文件 input.txt ，内容如下：</li>\n</ul>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 main.js 文件, 代码如下：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = fs.readFileSync(<span class=\"string\">&#x27;input.txt&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上代码执行结果如下：</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">node</span> <span class=\"title\">main</span>.js</span><br><span class=\"line\">Hello World！</span><br><span class=\"line\"></span><br><span class=\"line\">程序执行结束!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>非阻塞代码实例</li>\n<li>创建一个文件 input.txt ，内容如下：</li>\n</ul>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 main.js 文件, 代码如下：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readFile(<span class=\"string\">&#x27;input.txt&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上代码执行结果如下：</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">node</span> <span class=\"title\">main</span>.js</span><br><span class=\"line\">程序执行结束!</span><br><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>第一个实例在文件读取完后才执行完程序。 第二个实例我们不需要等待文件读取完，这样就可以在读取文件时同时执行接下来的代码，大大提高了程序的性能。</li>\n<li>因此，阻塞是按顺序执行的，而非阻塞是不需要按顺序的，所以如果需要处理回调函数的参数，我们就需要写在回调函数内。</li>\n</ul>\n","more":"<h1 id=\"Node-js简介\"><a href=\"#Node-js简介\" class=\"headerlink\" title=\"Node.js简介\"></a>Node.js简介</h1><ul>\n<li>Node.js是运行在服务端的JavaScript，是一个事件驱动I/O服务端Javascript环境。</li>\n<li>查看版本：<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">-v</span></span><br></pre></td></tr></table></figure></li>\n<li>node版本管理工具nvm</li>\n</ul>\n<h1 id=\"Node-js应用\"><a href=\"#Node-js应用\" class=\"headerlink\" title=\"Node.js应用\"></a>Node.js应用</h1><ul>\n<li>Node.js应用的构成：<ul>\n<li>引入required模块</li>\n<li>创建服务器</li>\n<li>接收请求与响应请求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"创建Node-js应用\"><a href=\"#创建Node-js应用\" class=\"headerlink\" title=\"创建Node.js应用\"></a>创建Node.js应用</h2><ul>\n<li>步骤一：引入required模块<ul>\n<li>使用require指令来载入http模块，并将实例化的HTTP复制给变量http，实例如下：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;http&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>步骤二：创建服务器</li>\n</ul>\n<ol>\n<li>创建一个server.js的文件:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;http&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//发送http头部</span></span><br><span class=\"line\">    <span class=\"comment\">//HTTP状态值：200 ：OK</span></span><br><span class=\"line\">    <span class=\"comment\">//内容类型：text/plain</span></span><br><span class=\"line\">    response.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>:<span class=\"string\">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class=\"line\">    <span class=\"comment\">//发送响应数据 “Hello World”</span></span><br><span class=\"line\">    response.end(<span class=\"string\">&#x27;Hello World\\n&#x27;</span>);</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">8888</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//终端打印如下信息</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Server running at http://127.0.0.1:8888/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>使用node命令执行以上代码</li>\n</ol>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">server</span>.js</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>访问<a href=\"http://127.0.0.1:8888/\">http://127.0.0.1:8888/</a></li>\n</ol>\n<h2 id=\"npm使用介绍\"><a href=\"#npm使用介绍\" class=\"headerlink\" title=\"npm使用介绍\"></a>npm使用介绍</h2><ul>\n<li>查看npm版本</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> -v</span><br></pre></td></tr></table></figure>\n<ul>\n<li>升级版本</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> install <span class=\"built_in\">npm</span> -g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装包</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> &lt;Module Name&gt;          <span class=\"comment\"># 本地安装</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span> &lt;Module Name&gt; -g       <span class=\"comment\"># 全局安装</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看安装信息</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> list -g                        <span class=\"comment\"># 查看全局安装的模块</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> list &lt;Module Name&gt;             <span class=\"comment\"># 查看某个模块的版本号</span></span><br><span class=\"line\"><span class=\"built_in\">npm</span> ls                             <span class=\"comment\"># 查看当前目录下的包信息</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>卸载模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm update &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>搜索模块</li>\n</ul>\n<figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm search &lt;<span class=\"keyword\">Module</span> <span class=\"keyword\">Name</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建模块</li>\n</ul>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$npm init                            <span class=\"meta\"># 会自动生成package.json</span></span><br><span class=\"line\"></span><br><span class=\"line\">$npm adduser                         <span class=\"meta\"># 在npm资源库中注册用户</span></span><br><span class=\"line\">Username:XXXX</span><br><span class=\"line\">Password:XXXXXXX</span><br><span class=\"line\">Email: XXXXXXXXX<span class=\"symbol\">@XXX</span>.XXX</span><br><span class=\"line\"></span><br><span class=\"line\">$npm publish                         <span class=\"meta\"># 发布模块</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Node-js-REPL-交互式解释器\"><a href=\"#Node-js-REPL-交互式解释器\" class=\"headerlink\" title=\"Node.js REPL(交互式解释器)\"></a>Node.js REPL(交互式解释器)</h2><ul>\n<li>REPL(Read Eval Print Loop:交互式解释器)，Node自带交互式解释器，可以执行<code>读取</code>,<code>执行</code>,<code>打印</code>,<code>循环</code>等任务</li>\n<li>在Node的REPL中可以执行：</li>\n</ul>\n<ol>\n<li>简单的表达式运算</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">1</span>+<span class=\"number\">4</span></span></span><br><span class=\"line\">5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">5</span>/<span class=\"number\">2</span></span></span><br><span class=\"line\">2.5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"> </span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>使用变量</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">1</span>+<span class=\"number\">4</span></span></span><br><span class=\"line\">5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"number\">5</span>/<span class=\"number\">2</span></span></span><br><span class=\"line\">2.5</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x=<span class=\"number\">10</span></span></span><br><span class=\"line\">10</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> y=<span class=\"number\">10</span></span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x+y</span></span><br><span class=\"line\">20</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;Hello World!&quot;</span>)</span></span><br><span class=\"line\">Hello World!</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"> </span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>多行表达式</li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">do</span> &#123;</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\">x++;</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;x:&quot;</span>+x);</span></span><br><span class=\"line\"><span class=\"meta\">...</span> <span class=\"javascript\">&#125;<span class=\"keyword\">while</span>(x&lt;<span class=\"number\">5</span>);</span></span><br><span class=\"line\">x:1</span><br><span class=\"line\">x:2</span><br><span class=\"line\">x:3</span><br><span class=\"line\">x:4</span><br><span class=\"line\">x:5</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">      </span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>下划线变量<code>[使用下划线(_)获取上一个表达式的运算结果]</code></li>\n</ol>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> x=<span class=\"number\">10</span>;</span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">y=<span class=\"number\">10</span>;</span></span><br><span class=\"line\">10</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\">x+y</span></span><br><span class=\"line\">20</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"keyword\">var</span> sum=_</span></span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> <span class=\"javascript\"><span class=\"built_in\">console</span>.log(sum)</span></span><br><span class=\"line\">20</span><br><span class=\"line\">undefined</span><br><span class=\"line\"><span class=\"meta\">&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>两次ctrl+c停止REPL</li>\n</ol>\n<h2 id=\"Node-js的回调函数\"><a href=\"#Node-js的回调函数\" class=\"headerlink\" title=\"Node.js的回调函数\"></a>Node.js的回调函数</h2><ul>\n<li>Node.js异步编程的直接体现就是回调</li>\n<li>阻塞代码实例</li>\n<li>创建一个文件 input.txt ，内容如下：</li>\n</ul>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 main.js 文件, 代码如下：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = fs.readFileSync(<span class=\"string\">&#x27;input.txt&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上代码执行结果如下：</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">node</span> <span class=\"title\">main</span>.js</span><br><span class=\"line\">Hello World！</span><br><span class=\"line\"></span><br><span class=\"line\">程序执行结束!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>非阻塞代码实例</li>\n<li>创建一个文件 input.txt ，内容如下：</li>\n</ul>\n<figure class=\"highlight erlang-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建 main.js 文件, 代码如下：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readFile(<span class=\"string\">&#x27;input.txt&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.toString());</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上代码执行结果如下：</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">node</span> <span class=\"title\">main</span>.js</span><br><span class=\"line\">程序执行结束!</span><br><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>第一个实例在文件读取完后才执行完程序。 第二个实例我们不需要等待文件读取完，这样就可以在读取文件时同时执行接下来的代码，大大提高了程序的性能。</li>\n<li>因此，阻塞是按顺序执行的，而非阻塞是不需要按顺序的，所以如果需要处理回调函数的参数，我们就需要写在回调函数内。</li>\n</ul>","categories":[{"name":"学习笔记","path":"api/categories/学习笔记.json"}],"tags":[{"name":"Node.js","path":"api/tags/Node.js.json"}]}