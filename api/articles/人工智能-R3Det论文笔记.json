{"title":"旋转目标检测 | R3Det，基于特征精炼的单阶段检测模型","slug":"人工智能-R3Det论文笔记","date":"2022-04-09T07:00:34.000Z","updated":"2022-04-09T07:00:34.000Z","comments":true,"path":"api/articles/人工智能-R3Det论文笔记.json","excerpt":null,"covers":["https://npm.elemecdn.com/justlovesmile-img/20220322100025.png","https://npm.elemecdn.com/justlovesmile-img/20220322120220.png","https://npm.elemecdn.com/justlovesmile-img/20220323144748.png","https://npm.elemecdn.com/justlovesmile-img/20220323144809.png","https://npm.elemecdn.com/justlovesmile-img/20220323154129.png","https://npm.elemecdn.com/justlovesmile-img/20220323154551.png","https://npm.elemecdn.com/justlovesmile-img/20220323154753.png","https://npm.elemecdn.com/justlovesmile-img/20220323155610.png"],"content":"<h1 id=\"1-论文信息\"><a href=\"#1-论文信息\" class=\"headerlink\" title=\"1. 论文信息\"></a>1. 论文信息</h1><p>论文标题： R3det: Refined single-stage detector with feature refinement for rotating object</p>\n<blockquote>\n<p>论文发表：AAAI 2021<br>论文链接：<a href=\"https://ojs.aaai.org/index.php/AAAI/article/view/16426/16233\">https://ojs.aaai.org/index.php/AAAI/article/view/16426/16233</a><br>论文代码：<a href=\"https://github.com/Thinklab-SJTU/R3Det_Tensorflow\">https://github.com/Thinklab-SJTU/R3Det_Tensorflow</a></p>\n</blockquote>\n<p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220322100025.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@article&#123;yang2019r3det,</span><br><span class=\"line\">  title=&#123;R3det: Refined single-stage detector with feature refinement for rotating object&#125;,</span><br><span class=\"line\">  author=&#123;Yang, Xue and Liu, Qingqing and Yan, Junchi and Li, Ang and Zhang, Zhiqiang and Yu, Gang&#125;,</span><br><span class=\"line\">  journal=&#123;arXiv preprint arXiv:1908.05612&#125;,</span><br><span class=\"line\">  volume=&#123;2&#125;,</span><br><span class=\"line\">  number=&#123;4&#125;,</span><br><span class=\"line\">  pages=&#123;2&#125;,</span><br><span class=\"line\">  year=&#123;2019&#125;,</span><br><span class=\"line\">  publisher=&#123;Aug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-归纳总结\"><a href=\"#2-归纳总结\" class=\"headerlink\" title=\"2. 归纳总结\"></a>2. 归纳总结</h1><table>\n<thead>\n<tr>\n<th>标签</th>\n<th>目的</th>\n<th>方法</th>\n<th>总结</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>#遥感 #单阶段 #Anchor</td>\n<td>针对单阶段精炼检测器特征未对齐的问题，提出了FRM模块</td>\n<td>RRetinaNet Based,FRM,SkewIou</td>\n<td>精炼</td>\n</tr>\n</tbody></table>\n<h1 id=\"3-问题背景\"><a href=\"#3-问题背景\" class=\"headerlink\" title=\"3. 问题背景\"></a>3. 问题背景</h1><p>作者称对于旋转目标检测存在三个挑战：</p>\n<ul>\n<li>大宽高比</li>\n<li>密集排列</li>\n<li>方向任意</li>\n</ul>\n<h1 id=\"4-主要工作\"><a href=\"#4-主要工作\" class=\"headerlink\" title=\"4. 主要工作\"></a>4. 主要工作</h1><p>针对上述问题，作者提出了R3Det，其主要工作如下：</p>\n<ul>\n<li>progressive regression： 作者发现旋转框在密集场景下的能有较好的目标检测精度，而水平框能达到更好的召回率，因此使用了这两种形式的框进行组合，具体做法是第一阶段检测水平框，从而提升检测速度，提高召回率，第二阶段也就是精炼阶段（refinement stage）检测旋转框，以适应密集目标的检测。</li>\n<li>feature refinement module：针对现有的单阶段refined detector，作者发现他们存在特征没对齐的问题，因此设计了一个特征精炼模块，使用特征插值来获取精炼的位置信息并重建特征图实现特征对齐，并且该模块还可以减少精炼边界框的数量，提升检测速度。</li>\n<li>approximate SkewIoU loss：为解决Skew IoU计算不可微的问题，设计了一种近似SkewIoU损失，以获得更精确的旋转估计。</li>\n</ul>\n<h2 id=\"4-1-模型结构\"><a href=\"#4-1-模型结构\" class=\"headerlink\" title=\"4.1 模型结构\"></a>4.1 模型结构</h2><p>R3Det主要基于 RetinaNet 实现，结构如下：</p>\n<p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220322120220.png\"></p>\n<h2 id=\"4-2-边界框定义\"><a href=\"#4-2-边界框定义\" class=\"headerlink\" title=\"4.2 边界框定义\"></a>4.2 边界框定义</h2><p>对于边界框$(x,y,w,h,\\theta)$，其中x，y代表中心点坐标，w，h代表宽和高，$\\theta \\in [-\\frac{\\pi}{2},0)$代表角度，边界框回归的值为：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323144748.png\"></p>\n<p>其中$x,x_a,x’$分别代表gt，anchor以及预测值，其余同上。</p>\n<p>损失函数为：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323144809.png\"></p>\n<p>其中$v’$为预测的偏移量向量，v代表gt的偏移量向量。其中N表示Anchor的数目,超参数 $\\lambda_1$， $\\lambda_2$ 控制着这两个损失的平衡，并且默认值为1。$L_{cls}$ 和 $L_{reg}$ 分别是Focal Loss和smooth L1 Loss。</p>\n<h2 id=\"4-3-精炼检测\"><a href=\"#4-3-精炼检测\" class=\"headerlink\" title=\"4.3 精炼检测\"></a>4.3 精炼检测</h2><p>Skew IoU对于角度十分敏感，因此作者在第一阶段使用0.5为前景阈值，0.4为背景阈值，在精炼的第一阶段使用0.6为前景阈值，0.5为背景阈值，如果有多段精炼阶段，使用0.7以及0.6为阈值。总损失：<br>$$L_{total}=\\sum_{i=1}^N\\alpha_iL_i$$<br>其中$L_i$为第i个精炼阶段的损失，$\\alpha_i$为平衡系数，默认为1.</p>\n<h2 id=\"4-4-特征精炼模块\"><a href=\"#4-4-特征精炼模块\" class=\"headerlink\" title=\"4.4 特征精炼模块\"></a>4.4 特征精炼模块</h2><p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154129.png\"></p>\n<p>许多精炼检测器仍然使用相同的特征图来执行多个分类和回归，而没有考虑边界框位置变化引起的特征未对齐。因此作者提出将当前精炼边界框(橙色矩形)的位置信息重新编码为对应的特征点(红色点)，从而以逐像素的方式<strong>重构整个特征图</strong>，实现<strong>特征对齐</strong>。整个过程如上图（c）所示。为了准确地获取精炼后的包围框对应的位置特征信息，采用了双线性特征插值方法，如上图（a）所示。特征插值可以表示为:<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154551.png\"><br>其中A代表图（a）中的区域，$F\\in \\mathbb{R}^{C\\times 1\\times 1}$代表特征图上点的特征向量。</p>\n<p>算法流程：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154753.png\"></p>\n<h1 id=\"5-实验结果\"><a href=\"#5-实验结果\" class=\"headerlink\" title=\"5. 实验结果\"></a>5. 实验结果</h1><p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323155610.png\"></p>\n","more":"<h1 id=\"1-论文信息\"><a href=\"#1-论文信息\" class=\"headerlink\" title=\"1. 论文信息\"></a>1. 论文信息</h1><p>论文标题： R3det: Refined single-stage detector with feature refinement for rotating object</p>\n<blockquote>\n<p>论文发表：AAAI 2021<br>论文链接：<a href=\"https://ojs.aaai.org/index.php/AAAI/article/view/16426/16233\">https://ojs.aaai.org/index.php/AAAI/article/view/16426/16233</a><br>论文代码：<a href=\"https://github.com/Thinklab-SJTU/R3Det_Tensorflow\">https://github.com/Thinklab-SJTU/R3Det_Tensorflow</a></p>\n</blockquote>\n<p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220322100025.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@article&#123;yang2019r3det,</span><br><span class=\"line\">  title=&#123;R3det: Refined single-stage detector with feature refinement for rotating object&#125;,</span><br><span class=\"line\">  author=&#123;Yang, Xue and Liu, Qingqing and Yan, Junchi and Li, Ang and Zhang, Zhiqiang and Yu, Gang&#125;,</span><br><span class=\"line\">  journal=&#123;arXiv preprint arXiv:1908.05612&#125;,</span><br><span class=\"line\">  volume=&#123;2&#125;,</span><br><span class=\"line\">  number=&#123;4&#125;,</span><br><span class=\"line\">  pages=&#123;2&#125;,</span><br><span class=\"line\">  year=&#123;2019&#125;,</span><br><span class=\"line\">  publisher=&#123;Aug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-归纳总结\"><a href=\"#2-归纳总结\" class=\"headerlink\" title=\"2. 归纳总结\"></a>2. 归纳总结</h1><table>\n<thead>\n<tr>\n<th>标签</th>\n<th>目的</th>\n<th>方法</th>\n<th>总结</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>#遥感 #单阶段 #Anchor</td>\n<td>针对单阶段精炼检测器特征未对齐的问题，提出了FRM模块</td>\n<td>RRetinaNet Based,FRM,SkewIou</td>\n<td>精炼</td>\n</tr>\n</tbody></table>\n<h1 id=\"3-问题背景\"><a href=\"#3-问题背景\" class=\"headerlink\" title=\"3. 问题背景\"></a>3. 问题背景</h1><p>作者称对于旋转目标检测存在三个挑战：</p>\n<ul>\n<li>大宽高比</li>\n<li>密集排列</li>\n<li>方向任意</li>\n</ul>\n<h1 id=\"4-主要工作\"><a href=\"#4-主要工作\" class=\"headerlink\" title=\"4. 主要工作\"></a>4. 主要工作</h1><p>针对上述问题，作者提出了R3Det，其主要工作如下：</p>\n<ul>\n<li>progressive regression： 作者发现旋转框在密集场景下的能有较好的目标检测精度，而水平框能达到更好的召回率，因此使用了这两种形式的框进行组合，具体做法是第一阶段检测水平框，从而提升检测速度，提高召回率，第二阶段也就是精炼阶段（refinement stage）检测旋转框，以适应密集目标的检测。</li>\n<li>feature refinement module：针对现有的单阶段refined detector，作者发现他们存在特征没对齐的问题，因此设计了一个特征精炼模块，使用特征插值来获取精炼的位置信息并重建特征图实现特征对齐，并且该模块还可以减少精炼边界框的数量，提升检测速度。</li>\n<li>approximate SkewIoU loss：为解决Skew IoU计算不可微的问题，设计了一种近似SkewIoU损失，以获得更精确的旋转估计。</li>\n</ul>\n<h2 id=\"4-1-模型结构\"><a href=\"#4-1-模型结构\" class=\"headerlink\" title=\"4.1 模型结构\"></a>4.1 模型结构</h2><p>R3Det主要基于 RetinaNet 实现，结构如下：</p>\n<p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220322120220.png\"></p>\n<h2 id=\"4-2-边界框定义\"><a href=\"#4-2-边界框定义\" class=\"headerlink\" title=\"4.2 边界框定义\"></a>4.2 边界框定义</h2><p>对于边界框$(x,y,w,h,\\theta)$，其中x，y代表中心点坐标，w，h代表宽和高，$\\theta \\in [-\\frac{\\pi}{2},0)$代表角度，边界框回归的值为：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323144748.png\"></p>\n<p>其中$x,x_a,x’$分别代表gt，anchor以及预测值，其余同上。</p>\n<p>损失函数为：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323144809.png\"></p>\n<p>其中$v’$为预测的偏移量向量，v代表gt的偏移量向量。其中N表示Anchor的数目,超参数 $\\lambda_1$， $\\lambda_2$ 控制着这两个损失的平衡，并且默认值为1。$L_{cls}$ 和 $L_{reg}$ 分别是Focal Loss和smooth L1 Loss。</p>\n<h2 id=\"4-3-精炼检测\"><a href=\"#4-3-精炼检测\" class=\"headerlink\" title=\"4.3 精炼检测\"></a>4.3 精炼检测</h2><p>Skew IoU对于角度十分敏感，因此作者在第一阶段使用0.5为前景阈值，0.4为背景阈值，在精炼的第一阶段使用0.6为前景阈值，0.5为背景阈值，如果有多段精炼阶段，使用0.7以及0.6为阈值。总损失：<br>$$L_{total}=\\sum_{i=1}^N\\alpha_iL_i$$<br>其中$L_i$为第i个精炼阶段的损失，$\\alpha_i$为平衡系数，默认为1.</p>\n<h2 id=\"4-4-特征精炼模块\"><a href=\"#4-4-特征精炼模块\" class=\"headerlink\" title=\"4.4 特征精炼模块\"></a>4.4 特征精炼模块</h2><p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154129.png\"></p>\n<p>许多精炼检测器仍然使用相同的特征图来执行多个分类和回归，而没有考虑边界框位置变化引起的特征未对齐。因此作者提出将当前精炼边界框(橙色矩形)的位置信息重新编码为对应的特征点(红色点)，从而以逐像素的方式<strong>重构整个特征图</strong>，实现<strong>特征对齐</strong>。整个过程如上图（c）所示。为了准确地获取精炼后的包围框对应的位置特征信息，采用了双线性特征插值方法，如上图（a）所示。特征插值可以表示为:<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154551.png\"><br>其中A代表图（a）中的区域，$F\\in \\mathbb{R}^{C\\times 1\\times 1}$代表特征图上点的特征向量。</p>\n<p>算法流程：<br><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323154753.png\"></p>\n<h1 id=\"5-实验结果\"><a href=\"#5-实验结果\" class=\"headerlink\" title=\"5. 实验结果\"></a>5. 实验结果</h1><p><img src=\"https://npm.elemecdn.com/justlovesmile-img/20220323155610.png\"></p>\n","categories":[{"name":"人工智能","path":"api/categories/人工智能.json"}],"tags":[{"name":"深度学习","path":"api/tags/深度学习.json"},{"name":"目标检测","path":"api/tags/目标检测.json"},{"name":"论文笔记","path":"api/tags/论文笔记.json"}]}